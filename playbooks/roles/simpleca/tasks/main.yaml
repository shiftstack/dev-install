---
# With thanks to https://milliams.com/posts/2020/ansible-certificate-authority/

- name: Install crypto library for openssl_* modules # noqa ignore-errors
  become: true
  become_user: root
  # To not fail on non-RPM systems let's just ignore errors.
  ignore_errors: true
  ansible.builtin.yum:
    state: installed
    name: python3-cryptography

- name: Create the CA directory
  ansible.builtin.file:
    path: "{{ ca_dir }}"
    state: directory
    mode: '750'

- name: Run the tasks to create CA cert and key when not provided
  when: ssl_ca_cert is not defined or ssl_ca_key is not defined
  block:
    - name: Create CA key
      community.crypto.openssl_privatekey:
        path: "{{ ca_dir }}/simpleca.key"
      register: ca_key

    - name: Create the CA CSR
      community.crypto.openssl_csr:
        path: "{{ ca_dir }}/simpleca.csr"
        privatekey_path: "{{ ca_key.filename }}"
        common_name: "simpleca"
        basic_constraints:
          - "CA:TRUE"
      register: ca_csr

    - name: Sign the CA CSR
      community.crypto.x509_certificate:
        path: "{{ ca_dir }}/simpleca.crt"
        csr_path: "{{ ca_csr.filename }}"
        privatekey_path: "{{ ca_key.filename }}"
        provider: selfsigned
      register: ca_crt

    - name: Create facts for CA files
      ansible.builtin.set_fact:
        ca_crt_path: "{{ ca_crt.filename }}"
        ca_key_path: "{{ ca_key.filename }}"

- name: Run the tasks to create temp files for CA cert and key when provided
  when: ssl_ca_cert is defined or ssl_ca_key is defined
  block:
    - name: "Write the CA cert into {{ ca_dir }}"
      ansible.builtin.copy:
        content: "{{ ssl_ca_cert | mandatory }}"
        dest: "{{ ca_dir }}/simpleca.crt"
        mode: '400'

    - name: "Write the CA key into {{ ca_dir }}"
      ansible.builtin.copy:
        content: "{{ ssl_ca_key | mandatory }}"
        dest: "{{ ca_dir }}/simpleca.key"
        mode: '400'

    - name: Create facts for CA files
      ansible.builtin.set_fact:
        ca_crt_path: "{{ ca_dir }}/simpleca.crt"
        ca_key_path: "{{ ca_dir }}/simpleca.key"

- name: Create a private key for {{ cert_user }}
  community.crypto.openssl_privatekey:
    path: "{{ cert_dir }}/{{ cert_user }}.key"
  register: user_key

- name: Create a CSR for {{ cert_user }}
  community.crypto.openssl_csr:
    path: "{{ cert_dir }}/{{ cert_user }}.csr"
    privatekey_path: "{{ user_key.filename }}"
    common_name: "{{ cert_name }}"
    subject_alt_name:
      - "DNS:{{ cert_name }}"
      - "DNS:{{ standalone_host }}"
      - "IP:{{ public_api }}"
      - "IP:{{ control_plane_ip }}"
  register: user_csr

- name: Sign the CSR for {{ cert_user }}
  community.crypto.x509_certificate:
    path: "{{ cert_dir }}/{{ cert_user }}.crt"
    csr_path: "{{ user_csr.filename }}"
    provider: ownca
    ownca_path: "{{ ca_crt_path }}"
    ownca_privatekey_path: "{{ ca_key_path }}"
