---
rhos_release: 16.2
hostname: standalone
clouddomain: shiftstack

# The name of the cloud in *local* clouds.yaml. On the host it will always be
# called `standalone`.
local_cloudname: standalone

# Keystone password for the 'openshift' user
openshift_password: password

# The control plane IP address allocated to br-ctlplane
# You probably won't need to change this
control_plane_ip: 192.168.24.1

# The IP address of the public openstack endpoints
# By default we use the default IP of the host
public_api: "{{ network_info.public_ipv4.address }}"

# For advanced network configurations (e.g. SR-IOV), network_config can be overriden
# The format is for os-net-config, check dev-install_net_config.yaml.j2 template.
# network_config

# The `external` provider network
# This will be created only if external_fip_pool_start and external_fip_pool_end
# are manually defined.
# By default we assume it shares the same subnet as the default external IP,
# which is true in DSAL.
# N.B. (mdbooth): external_network is not used outside this file, and is not
# required if overriding.
external_netmask: "{{ network_info.public_ipv4.network }}/{{ network_info.public_ipv4.netmask }}"
external_cidr: "{{ external_netmask | ipaddr('net') }}"
external_gateway: "{{ network_info.public_ipv4.gateway }}"
# external_fip_pool_start
# external_fip_pool_end

# The `hostonly` provider network
# This will always be created. It creates a provider network which is local to
# the host, and not externally routable.
# The routable cidr of the hostonly network, even if we can't use all of it.
hostonly_cidr: 192.168.25.0/24
# The IP of the gateway used by the hostonly provider network, which must be
# within hostonly_cidr.
hostonly_gateway: "{{ hostonly_cidr | nthhost(1) }}"
# The range of allocatable FIPs within hostonly_cidr
hostonly_fip_pool_start: "{{ hostonly_cidr | nthhost(2) }}"
hostonly_fip_pool_end: "{{ hostonly_cidr | nthhost(-2) }}"

# Configuration used only by prepare_stack_testconfig, which is not run by
# default.
testconfig_private_cidr: 192.168.100.0/24
testconfig_public_key: ~/.ssh/id_rsa.pub

create_rhcos_image: true
cirros_url: http://download.cirros-cloud.net/0.5.1/cirros-0.5.1-x86_64-disk.img
rhcos_meta_url: https://raw.githubusercontent.com/openshift/installer/master/data/data/rhcos.json
# Define rhcos_url to override use of rhcos_meta_url

enabled_services: []
standalone_role: /usr/share/openstack-tripleo-heat-templates/roles/Standalone.yaml
# List of TripleO services that we want to add in the role defined in standalone_role.
# e.g. ['OS::TripleO::Services::CinderVolumeEdge', 'OS::TripleO::Services::Etcd']
standalone_role_overrides: []
standalone_extra_config: {}

# This variable allows to add extra Heat parameters to standalone_parameters.yaml.
# e.g.  extra_heat_params:
#         NovaReservedHostMemory: 4096
#         NovaPCIPassthrough:
#           - address: "0000:04:00.1"
# Note that if a Heat param is defined in extra_heat_params and also in standalone_parameters,
# the former will override the latter which can be useful if you need specific configs.
#
# extra_heat_params:

neutron_bridge_mappings: "external:br-ex,hostonly:br-hostonly"
neutron_flat_networks: "external,hostonly"

tripleo_repos_repos:
  - current-tripleo
  - ceph

ceph_enabled: true
# List of devices to use for ceph. If unset, we use a loop device instead.
# ceph_devices:
#   - /dev/sdc

# Size of the loop device that will be
# used for Ceph (in GB).
ceph_loop_device_size: 100

octavia_enabled: true

manila_enabled: false

# Enable SSL for the OpenStack public endpoints
# using self-signed certificate
ssl_enabled: false
ssl_ca_cert_path: /etc/pki/ca-trust/source/anchors/simpleca.crt

sriov_services:
  - OS::TripleO::Services::NeutronSriovAgent
  - OS::TripleO::Services::BootParams
#sriov_interface:
#sriov_nic_numvfs:
#sriov_nova_pci_passthrough:

#dpdk_kernel_args:
#dpdk_isol_cpus_list:
#dpdk_cpu_shared_set:

# This should not be changed unless you know what you're doing
# because CentOS8 stream is now the only distro supported when deploying
# TripleO from upstream.
tripleo_repos_stream: true

# A list of SSH public keys that will be authorized to be used
# when connecting with the stack user
# They have to be URLs, e.g. https://github.com/foobar.keys
authorized_keys: []
