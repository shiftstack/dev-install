---
rhos_release: 16.2
hostname: standalone
clouddomain: shiftstack

# is ansible running in a virtualenv on the control node
is_local_virtualenv: "{{ lookup('env','VIRTUAL_ENV') | default('', true) }}"

# The name of the cloud in *local* clouds.yaml. On the host it will always be
# called `standalone`.
local_cloudname: standalone

# Keystone password for the 'openshift' user
openshift_password: password

# Keystone password for the 'admin' user (default is generated by TripleO and secure)
# admin_password

# Control plane network is used for services not exposed on the public network
# and isolated under the br-ctlplane bridge.
# * local_ip is the IP where the services actually listen to.
# * control_plane_ip is the VIP that will be managed by Pacemaker,
#   where HAproxy will listen on the control plane network and
#   redirect the traffic to local_ip where the service actually listens.
# You probably won't need to change this.
control_plane_cidr: 192.168.24.0/24
control_plane_prefix: "{{ control_plane_cidr | ipaddr('prefix') }}"
local_ip: "{{ control_plane_cidr | nthhost(1) }}"
control_plane_ip: "{{ control_plane_cidr | nthhost(2) }}"

# The IP address of the public openstack endpoints
# By default we use the default IP of the host
public_api: "{{ network_info.public_ipv4.address }}"

# For advanced network configurations (e.g. SR-IOV), network_config can be overriden
# The format is for os-net-config, check dev-install_net_config.yaml.j2 template.
# network_config

# List of remote IPs used by VXLAN enpoints to connect both
# hostonly and control plane bridges, when they exist.
tunnel_remote_ips: []

# The `external` provider network
# This will be created only if external_fip_pool_start and external_fip_pool_end
# are manually defined.
# By default we assume it shares the same subnet as the default external IP,
# which is true in DSAL.
# N.B. (mdbooth): external_network is not used outside this file, and is not
# required if overriding.
external_netmask: "{{ network_info.public_ipv4.network }}/{{ network_info.public_ipv4.netmask }}"
external_cidr: "{{ external_netmask | ipaddr('net') }}"
external_gateway: "{{ network_info.public_ipv4.gateway }}"
# external_fip_pool_start
# external_fip_pool_end

# The `hostonly` dual-stack provider network
# This will always be created. It creates a provider network which is local to
# the host, and not externally routable.
# The routable cidr of the hostonly network, even if we can't use all of it.
hostonly_cidr: 192.168.25.0/24
# The IP of the gateway used by the hostonly provider network, which must be
# within hostonly_cidr.
hostonly_gateway: "{{ hostonly_cidr | nthhost(1) }}"
# The range of allocatable FIPs within hostonly_cidr
hostonly_fip_pool_start: "{{ hostonly_cidr | nthhost(2) }}"
hostonly_fip_pool_end: "{{ hostonly_cidr | nthhost(-2) }}"
# Same for IPv6
hostonly_v6_cidr: 2001:db8::/64
hostonly_v6_gateway: "{{ hostonly_v6_cidr | nthhost(1) }}"
hostonly_v6_fip_pool_start: "{{ hostonly_v6_cidr | nthhost(2) }}"
hostonly_v6_fip_pool_end: "{{ hostonly_v6_cidr | nthhost(-2) }}"

# `hostonly` variants
hostonly_sriov_cidr: 192.168.26.0/24
hostonly_sriov_gateway: "{{ hostonly_sriov_cidr | nthhost(1) }}"
hostonly_sriov_prefix: "{{ hostonly_sriov_cidr | ipaddr('prefix') }}"
hostonly_sriov_fip_pool_start: "{{ hostonly_sriov_cidr | nthhost(2) }}"
hostonly_sriov_fip_pool_end: "{{ hostonly_sriov_cidr | nthhost(-2) }}"

# Configuration used only by prepare_stack_testconfig, which is not run by
# default.
testconfig_private_cidr: 192.168.100.0/24
testconfig_public_key: ~/.ssh/id_rsa.pub

cirros_url: http://download.cirros-cloud.net/0.5.1/cirros-0.5.1-x86_64-disk.img

enabled_services: []
standalone_role: /usr/share/openstack-tripleo-heat-templates/roles/Standalone.yaml
# List of TripleO services that we want to add in the role defined in standalone_role.
# e.g. ['OS::TripleO::Services::CinderVolumeEdge', 'OS::TripleO::Services::Etcd']
standalone_role_overrides: []
standalone_extra_config: {}

# Sets the number of Neutron/Nova/... workers to 1
# Uses the environement file low-memory-usage.yaml
low_memory_usage: false

# This variable allows to add extra Heat parameters to standalone_parameters.yaml.
# e.g.  extra_heat_params:
#         NovaReservedHostMemory: 4096
#         NovaPCIPassthrough:
#           - address: "0000:04:00.1"
# Note that if a Heat param is defined in extra_heat_params and also in standalone_parameters,
# the former will override the latter which can be useful if you need specific configs.
#
# extra_heat_params:

# This param can be overriden, but only when overriding the network_config, otherwise the default
# should work as is:
#neutron_bridge_mappings:
neutron_flat_networks: "external,hostonly,hostonly-sriov"

# If we have more than one SR-IOV device, it can be useful to override this one, but the default is safe
# if we only use `sriov_interface` for one device.
#neutron_physical_dev_mappings:

tripleo_repos_repos:
  - current-tripleo
  - ceph

ceph_enabled: true
# List of devices to use for ceph. If unset, we use a loop device instead.
# ceph_devices:
#   - /dev/sdc

# Size of the loop device that will be
# used for Ceph (in GB).
ceph_loop_device_size: 100

octavia_enabled: true

manila_enabled: false
# Workaround for BZ#1969962
manila_services:
  - OS::TripleO::Services::CephNfs

# Whether or not we want to add the swiftoperator role to
# the openshift user in openshift project (in Keystone).
# Set this to false and the openshift user won't have access
# to Swift. It can be useful if you want to force OpenShift to
# deploy the Image registry in Cinder instead of Swift.
swiftoperator_enabled: true

# Enable SSL for the OpenStack public endpoints
ssl_enabled: true
# To use your own certificates and key, set these variables, otherwise
# dev-install will generate self-signed certificates and use them
# ssl_cert
# ssl_key
# If you already have your own CA, you can provide these two variables
# and dev-install will sign the certificates with it.
# If left unset, dev-install will generate the CA and self-sign it.
# ssl_ca_cert
# ssl_ca_key
ssl_ca_cert_path: /etc/pki/ca-trust/source/anchors/simpleca.crt
# Whether or not we update the local PKI with the CA certificate
update_local_pki: false

sriov_services:
  - OS::TripleO::Services::NeutronSriovAgent

dpdk_services:
  - OS::TripleO::Services::ComputeNeutronOvsDpdk

kernel_services:
  - OS::TripleO::Services::BootParams

#sriov_interface:
#sriov_nic_numvfs:
#sriov_nova_pci_passthrough:

#dpdk_interface:
#tuned_isolated_cores:

# Kernel arguments to add at boot
#kernel_args:

# This should not be changed unless you know what you're doing
# because CentOS stream is now the only distro supported when deploying
# TripleO from upstream.
tripleo_repos_stream: true

# A list of SSH public keys that will be authorized to be used
# when connecting with the stack user
# They have to be URLs, e.g. https://github.com/foobar.keys
authorized_keys: []

# Red Hat Subscription Manager options
rhsm_enabled: false
# If the system is used for production, you want to keep
# RHSM activated to get upgrades later; so in this case set it
# to false.
rhsm_ephemeral: true
rhsm_repos:
  - advanced-virt-for-rhel-8-x86_64-rpms
  - ansible-2.9-for-rhel-8-x86_64-rpms
  - fast-datapath-for-rhel-8-x86_64-rpms
  - openstack-16.2-for-rhel-8-x86_64-rpms
  - rhceph-4-tools-for-rhel-8-x86_64-rpms
  - rhel-8-for-x86_64-appstream-eus-rpms
  - rhel-8-for-x86_64-baseos-eus-rpms
  - rhel-8-for-x86_64-highavailability-eus-rpms
rhsm_method: "portal"
rhsm_release: 8.4
rhsm_container_tools_version: '3.0'
# Note: to install 16.1 on RHEL 8.2, you need virt_release set to "8.2"
# For OSP 16.2 on RHEL 8.4, you need "av".
virt_release: av
# Red Hat Registry credentials have to be set when deploying OSP on RHEL
# redhat_registry_credentials

# Edge parameters
# The central site must be named "central", otherwise for other AZs it's up to the user.
# dcn_az
dcn_services: 
  - OS::TripleO::Services::Etcd
  - OS::TripleO::Services::NovaAZConfig

# A list of block devices which will be combined and used as ephemeral local
# storage
ephemeral_storage_devices: []

# Whether or not we want OVN to be enabled
ovn_enabled: true

# In multinode, we create VXLAN tunnels to connect the br-ctlplane bridges
# and on top of it, Neutron tenant networks will also have tunnels so
# we need to lower the MTU to 1300 which should be safe to do Geneve tunnels
# over VXLAN. For PEK2 DSAL boxes you might need to bump that value to e.g.
# 1350 as apprently there are packets flying with 1260 (and 1300 will give you
# 1242 on Neutron network which won't be enough).
# 
# The default value can be problematic when doing double encapsulaiton with OVN,
# the value will have to be increased. See the following bug report:
# https://issues.redhat.com/browse/OCPBUGS-2921
neutron_mtu: 1300
ctlplane_mtu: "{{ neutron_mtu|int + 100 }}"
hostonly_mtu: "{{ neutron_mtu|int + 100 }}"
public_mtu: "{{ ctlplane_mtu|int + 100 }}"
