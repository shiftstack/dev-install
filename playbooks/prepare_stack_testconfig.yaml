---
- hosts: standalone
  become: true
  become_user: stack
  gather_facts: false
  vars_files: vars/defaults.yaml

  tasks:

  - name: Gather host environment variables
    setup:
      filter: ansible_env

  - name: Ensure remote .ssh directory
    file:
      path: "{{ ansible_env.HOME }}/.ssh"
      state: directory
      owner: stack
      group: stack
      mode: '0700'

  - name: Copy ssh public key to host
    copy:
      src: "{{ testconfig_public_key }}"
      dest: "{{ ansible_env.HOME }}/.ssh/{{ testconfig_public_key | basename }}"
      owner: stack
      group: stack
      mode: '0600'
    register: testconfig_public_key_copy

  - name: Configure resources for openshift user # noqa 301
    shell: |
      set -e -o pipefail

      if ! openstack keypair show default >/dev/null; then
          openstack keypair create --public-key {{ testconfig_public_key_copy.dest }} default
      fi
      if ! openstack network show private >/dev/null; then
          openstack network create --internal private
      fi
      if ! openstack subnet show private-subnet >/dev/null; then
          openstack subnet create private-subnet --subnet-range {{ testconfig_private_cidr }} --network private
      fi
      # create basic security group to allow ssh/ping/dns
      if ! openstack security group show basic >/dev/null; then
          openstack security group create basic
      fi
      if ! openstack security group rule list basic | grep "22:22"; then
          openstack security group rule create basic --protocol tcp --dst-port 22:22 --remote-ip 0.0.0.0/0
      fi
      if ! openstack security group rule list basic | grep "icmp"; then
          openstack security group rule create --protocol icmp basic
      fi
      if ! openstack security group rule list basic | grep "53:53"; then
          openstack security group rule create --protocol udp --dst-port 53:53 basic
      fi
      # Create a router for private<->external
      if ! openstack router show private-subnet-external >/dev/null; then
          openstack router create private-subnet-external
          openstack router set private-subnet-external --external-gateway external
          openstack router add subnet private-subnet-external private-subnet
      fi
    environment:
      OS_CLOUD: openshift

  - name: Set images directory
    set_fact:
      images_dir: "{{ ansible_env.HOME }}/images"

  - name: Create images directory
    file:
      path: "{{ images_dir }}"
      state: directory
      mode: 0755

  - name: Extract Cirros filename
    set_fact:
      cirros_filename: "{{ cirros_url | urlsplit('path') | basename }}"

  - name: Download Cirros image
    get_url:
      url: "{{ cirros_url }}"
      dest: "{{ images_dir }}/{{ cirros_filename }}"
    register: cirros

  - name: Import Cirros image # noqa 301
    shell: |
      if ! openstack image show cirros >/dev/null; then
          openstack image create cirros --container-format bare --disk-format qcow2 --public \
            --file "{{ cirros.dest }}"
      fi
    environment:
      OS_CLOUD: standalone
